openapi: "3.0.1"
info:
  title: "orders-service-http-api"
  description: "Http API for Orders"
  version: "1.0"
servers:
- url: "https://106yp3w1la.execute-api.ca-central-1.amazonaws.com/{basePath}"
  variables:
    basePath:
      default: ""
tags:
- name: "aws:cloudformation:stack-name"
  x-amazon-apigateway-tag-value: "pcf-demo-serverless-dev-orders-service"
- name: "aws:cloudformation:logical-id"
  x-amazon-apigateway-tag-value: "OrdersApi"
- name: "aws:cloudformation:stack-id"
  x-amazon-apigateway-tag-value: "arn:aws:cloudformation:ca-central-1:812042964529:stack/pcf-demo-serverless-dev-orders-service/df853460-4cd4-11ed-ada5-06e95b60986e"
- name: "httpapi:createdBy"
  x-amazon-apigateway-tag-value: "SAM"
paths:
  /orders/client/go-to-step2:
    post:
      responses:
        default:
          description: "Default response for POST /orders/client/go-to-step2"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:ca-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ca-central-1:812042964529:function:ordersService/invocations"
        connectionType: "INTERNET"
  /orders/client/go-to-step3:
    post:
      responses:
        default:
          description: "Default response for POST /orders/client/go-to-step3"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:ca-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ca-central-1:812042964529:function:ordersService/invocations"
        connectionType: "INTERNET"
components:
  securitySchemes:
    lambda-authorizer:
      type: "apiKey"
      name: "Authorization"
      in: "header"
      x-amazon-apigateway-authorizer:
        identitySource: "$request.header.Authorization"
        authorizerUri: "arn:aws:apigateway:ca-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ca-central-1:812042964529:function:authFunction/invocations"
        authorizerPayloadFormatVersion: "2.0"
        authorizerResultTtlInSeconds: 1800
        type: "request"
        enableSimpleResponses: true
  x-amazon-apigateway-integrations:
    unusedIntegration_5fhaawf:
      payloadFormatVersion: "2.0"
      type: "aws_proxy"
      httpMethod: "POST"
      uri: "arn:aws:apigateway:ca-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ca-central-1:812042964529:function:ordersService/invocations"
      connectionType: "INTERNET"
x-amazon-apigateway-cors:
  allowMethods:
  - "DELETE"
  - "GET"
  - "POST"
  - "PUT"
  allowHeaders:
  - "authorization"
  - "x-apigateway-header"
  maxAge: 600
  allowCredentials: true
  allowOrigins:
  - "https://example.com"
x-amazon-apigateway-importexport-version: "1.0"
