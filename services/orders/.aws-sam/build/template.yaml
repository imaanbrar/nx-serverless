AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Orders Service

  '
Parameters:
  env:
    Type: String
    Default: dev
    AllowedValues:
    - dev
    - test
    - prod
    Description: Envrionment value. Enter dev, test or prod. Default is dev.
  AuthFunctionArn:
    Type: String
    Default: some-arn
    Description: Specify ARN for AuthFunction
  AuthFunctionInvokeRoleArn:
    Type: String
    Default: some-arn
    Description: Specify ARN for AuthFunctionInvokeRole
Resources:
  OrdersApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName:
        Ref: env
      DefinitionBody:
        openapi: 3.0.1
        info:
          title: orders-service-http-api
          description: Http API for Orders
          version: '1.0'
        paths:
          /orders/client/go-to-step2:
            post:
              responses:
                default:
                  description: Default response for POST /orders/client/go-to-step2
              security:
              - lambda-authorizer: []
              x-amazon-apigateway-integration:
                payloadFormatVersion: '2.0'
                type: aws_proxy
                httpMethod: POST
                uri: arn:aws:apigateway:ca-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ca-central-1:812042964529:function:ordersService/invocations
                connectionType: INTERNET
          /orders/client/go-to-step3:
            post:
              responses:
                default:
                  description: Default response for POST /orders/client/go-to-step3
              security:
              - lambda-authorizer: []
              x-amazon-apigateway-integration:
                payloadFormatVersion: '2.0'
                type: aws_proxy
                httpMethod: POST
                uri: arn:aws:apigateway:ca-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ca-central-1:812042964529:function:ordersService/invocations
                connectionType: INTERNET
        components:
          securitySchemes:
            lambda-authorizer:
              type: apiKey
              name: Authorization
              in: header
              x-amazon-apigateway-authorizer:
                identitySource: $request.header.Authorization
                authorizerUri: arn:aws:apigateway:ca-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ca-central-1:812042964529:function:authFunction/invocations
                authorizerPayloadFormatVersion: '2.0'
                authorizerResultTtlInSeconds: 1800
                type: request
                enableSimpleResponses: true
          x-amazon-apigateway-integrations:
            unusedIntegration_5fhaawf:
              payloadFormatVersion: '2.0'
              type: aws_proxy
              httpMethod: POST
              uri: arn:aws:apigateway:ca-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ca-central-1:812042964529:function:ordersService/invocations
              connectionType: INTERNET
        x-amazon-apigateway-cors:
          allowMethods:
          - DELETE
          - GET
          - POST
          - PUT
          allowHeaders:
          - authorization
          - x-apigateway-header
          maxAge: 600
          allowCredentials: true
          allowOrigins:
          - https://example.com
        x-amazon-apigateway-importexport-version: '1.0'
  OrdersFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ordersService
      CodeUri: OrdersFunction
      Handler: services/orders/functions/index.lambdaHandler
      Runtime: nodejs14.x
      Tracing: Active
      Events:
        GoToStep2:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: OrdersApi
            Path: /orders/client/go-to-step2
            Method: post
        GoToStep3:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: OrdersApi
            Path: /orders/client/go-to-step3
            Method: post
    Metadata:
      SamResourceId: OrdersFunction
Outputs:
  OrdersApiUrl:
    Description: URL of your OrdersApi endpoint
    Value:
      Fn::Sub: https://${OrdersApi}.execute-api.${AWS::Region}.${AWS::URLSuffix}/${env}/
  OrdersApiId:
    Description: Api id of OrdersApi
    Value:
      Ref: OrdersApi
  OrdersFunction:
    Description: Orders Function ARN
    Value:
      Fn::GetAtt:
      - OrdersFunction
      - Arn
  OrdersIamRole:
    Description: Implicit IAM Role created for Orders function
    Value:
      Fn::GetAtt:
      - OrdersFunctionRole
      - Arn
